import React from 'react';
import INotificationStore from '../../types/INotificationStore';
declare type StoreConfig = {
    id: string;
    defaultQueryParams: Record<string, unknown>;
    defaults?: Partial<Omit<INotificationStore, 'context'>>;
};
export interface MagicBellProviderProps {
    apiKey: string;
    userEmail?: string;
    userExternalId?: string;
    userKey?: string;
    children: React.ReactElement | React.ReactElement[];
    stores?: StoreConfig[];
    serverURL?: string;
    disableRealtime?: boolean;
}
/**
 * Provider component for Magicbell.
 *
 * @param props
 * @param props.apiKey API key of the MagicBell project
 * @param props.userEmail Email of the user whose notifications will be displayed
 * @param props.userExternalId External ID of the user whose notifications will be displayed
 * @param props.userKey Computed HMAC of the user whose notifications will be displayed, compute this with the secret of the magicbell project
 * @param props.stores List of stores to be created
 * @param props.disableRealtime Disable realtime updates
 *
 * @example
 * ```javascript
 * <MagicBellProvider apiKey={MAGICBELL_API_KEY} userEmail={email}>
 *   <App />
 * </MagicBellProvider>
 * ```
 */
export default function MagicBellProvider({ children, stores, disableRealtime, ...clientSettings }: MagicBellProviderProps): JSX.Element;
export {};
